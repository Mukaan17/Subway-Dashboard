# @Author: Mukhil Sundararaj
# @Date:   2025-05-10 23:41:24
# @Last Modified by:   Mukhil Sundararaj
# @Last Modified time: 2025-05-11 13:41:36

services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    platform: linux/amd64
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  # Kafka broker
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    platform: linux/amd64
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped

  # MongoDB for data storage
  mongodb:
    image: mongo:4.4
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  # Kafka UI for debugging
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    restart: unless-stopped

  # MTA Data Producer
  producer:
    build:
      context: .
      dockerfile: src/producer/Dockerfile
    container_name: mta-producer
    depends_on:
      - kafka
    env_file:
      - .env
    volumes:
      - ./src/producer:/app
    restart: unless-stopped

  # Spark Master
  spark-master:
    image: bitnami/spark:3.3.1
    container_name: spark-master
    ports:
      - "8090:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    restart: unless-stopped

  # Spark Worker
  spark-worker:
    image: bitnami/spark:3.3.1
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    restart: unless-stopped

  # Spark Processor
  processor:
    build:
      context: .
      dockerfile: src/processor/Dockerfile
    container_name: mta-processor
    depends_on:
      - kafka
      - spark-master
      - mongodb
    volumes:
      - ./src/processor:/app
    restart: unless-stopped

  # API Backend
  api:
    build:
      context: .
      dockerfile: src/api/Dockerfile
    container_name: mta-api
    depends_on:
      - mongodb
    ports:
      - "8000:8000"
    volumes:
      - ./src/api:/app
    restart: unless-stopped

  # React Dashboard
  dashboard:
    build:
      context: ./dashboard
    container_name: mta-dashboard
    depends_on:
      - api
    ports:
      - "3000:3000"
    volumes:
      - ./dashboard:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=3000
    restart: unless-stopped

volumes:
  mongo_data: 